{"version":3,"sources":["tasks.js","projects.js","index.js"],"names":["TaskElement","props","task","handleRemove","bind","handleCheck","event","this","target","parentElement","getAttribute","className","data-key","id","done","type","onChange","defaultChecked","name","onClick","React","Component","TaskForm","state","value","handleChange","handleButton","setState","preventDefault","addElement","onSubmit","placeholder","Tasks","handleAdd","handleBack","projectName","tasks","map","key","ProjectElement","project","handleNavigation","handleNav","element","classList","contains","ProjectForm","Projects","projects","tasks2","App","idCounter","idCounterTask","shownProject","handleRemoveProject","handleNavProject","handleAddProject","handleAddTask","handleRemoveTask","handleCheckTask","counter","push","filter","Number","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2186c2c9.chunk.js","sourcesContent":["import React from 'react';\n\nclass TaskElement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.task = props.task;\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n  }\n  handleRemove(event) {\n    this.props.handleRemove(event.target.parentElement.getAttribute('data-key'));\n  }\n  handleCheck(event) {\n    this.props.handleCheck(event.target.parentElement.getAttribute('data-key'));\n  }\n\n  render() {\n    const task = this.task;\n    return (\n      <li className={this.props.className} data-key={task.id}>\n        {\n          task.done ?\n            <input type=\"checkbox\" onChange={this.handleCheck} defaultChecked /> :\n            <input type=\"checkbox\" onChange={this.handleCheck} />\n        }\n        <p>{task.name}</p>\n        <button onClick={this.handleRemove}> delete</button>\n      </li>\n    )\n  }\n}\nclass TaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'Nome da nova tarefa...',\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n  handleChange(event) {\n    this.setState({ value: event.target.value })\n  }\n  handleButton(event) {\n    event.preventDefault();\n    this.props.addElement(this.state.value);\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleButton}>\n        <input\n          placeholder={this.state.value}\n          onChange={this.handleChange}>\n        </input>\n        <button> add </button>\n      </form>\n    )\n  }\n}\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleBack  = this.handleBack.bind(this);\n  }\n  handleAdd(name) {\n    this.props.handleAdd(name);\n  }\n  handleRemove(id) {\n    this.props.handleRemove(id);\n  }\n  handleCheck(id) {\n    this.props.handleCheck(id)\n  }\n  handleBack(){\n    this.props.handleBack();\n  }\n  render() {\n    return (\n      <div className={'tasks'}>\n        <header>\n          <h2>{this.props.projectName}</h2>\n          <h2>Tasks</h2>\n          <button onClick={this.handleBack}></button>\n        </header>\n        <TaskForm addElement={this.handleAdd} />\n        <ul>\n          {\n            this.props.tasks ?\n              this.props.tasks.map((task) =>\n                <TaskElement\n                  task={task}\n                  className={\"task-item\"}\n                  handleRemove={this.handleRemove}\n                  handleCheck={this.handleCheck}\n                  key={task.id}\n                />\n              ) :\n              <h2>No tasks to show.</h2>\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport { Tasks };","import React from 'react';\n\nclass ProjectElement extends React.Component {\n  constructor(props) {\n    super(props)\n    this.project = this.props.project;\n\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleNavigation = this.handleNav.bind(this);\n  }\n  handleRemove(event) {\n    this.props.handleRemove(event.target.parentElement.getAttribute('data-key'));\n  }\n  handleNav(event) {\n    const element = event.target;\n    if(element.classList.contains('delete-btn')){\n      return;\n    }\n    if(element.getAttribute('data-key'))\n      this.props.handleNav(element.getAttribute('data-key'));\n    else if(element.parentElement.getAttribute('data-key'))\n      this.props.handleNav(element.parentElement.getAttribute('data-key'));\n  }\n  render() {\n    return (\n      <li data-key={this.project.id}\n        className={'project-item'}\n        onClick={this.handleNavigation}>\n        <p>{this.project.name}</p>\n        <button \n          className={'delete-btn'} \n          onClick={this.handleRemove}>\n          delete\n        </button>\n      </li>\n    )\n  }\n}\n\nclass ProjectForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'Nome do novo projeto...',\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n  handleChange(event) {\n    this.setState({ value: event.target.value })\n  }\n  handleButton(event) {\n    event.preventDefault();\n    this.props.handleAdd(this.state.value);\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleButton}>\n        <input\n          placeholder={this.state.value}\n          onChange={this.handleChange}>\n        </input>\n        <button> add </button>\n      </form>\n    )\n  }\n}\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleNav = this.handleNav.bind(this);\n  }\n  handleAdd(name) {\n    this.props.handleAdd(name);\n  }\n  handleRemove(id) {\n    this.props.handleRemove(id);\n  }\n  handleNav(id) {\n    this.props.handleNav(id);\n  }\n  render() {\n    return (\n      <div className={\"projects\"}>\n        <h2>Projects</h2>\n        <ProjectForm handleAdd={this.handleAdd} />\n        <ol>\n          {\n            this.props.projects.map((project) =>\n              <ProjectElement\n                className={\"project-item\"}\n                project={project}\n                handleRemove={this.handleRemove}\n                handleNav={this.handleNav}\n                key={project.id}\n              />\n            )\n          }\n        </ol>\n      </div>\n    )\n  }\n}\n\nexport {Projects};","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Tasks } from \"./tasks\";\nimport {Projects} from \"./projects\" \n\nimport \"./reset.css\";\nimport \"./style.css\";\n\n\nconst tasks = [\n  { name: \"Tarefa 1\", id: 0, done: false },\n  { name: \"Tarefa 2\", id: 1, done: true },\n  { name: \"Tarefa 3\", id: 2, done: false }\n];\nconst tasks2 = [\n  { name: \"Tarefa 4\", id: 3, done: false },\n  { name: \"Tarefa 5\", id: 4, done: false },\n  { name: \"Tarefa 6\", id: 5, done: true }\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      idCounter: 2,\n      idCounterTask: 6,\n      projects: [\n        { name: 'pojeto1', id: 0, tasks: tasks },\n        { name: 'pojeto2', id: 1, tasks: tasks2 }\n      ],\n      shownProject: null,\n    }\n\n    this.handleRemoveProject = this.handleRemoveProject.bind(this);\n    this.handleNavProject = this.handleNavProject.bind(this);\n    this.handleAddProject = this.handleAddProject.bind(this);\n\n    this.handleAddTask = this.handleAddTask.bind(this);\n    this.handleRemoveTask = this.handleRemoveTask.bind(this);\n    this.handleCheckTask = this.handleCheckTask.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n  }\n  handleAddProject(name) {\n    const projects = this.state.projects;\n    const counter = this.state.idCounter + 1;\n    projects.push({ name: name, id: this.state.idCounter });\n    this.setState({ projects: projects, idCounter: counter });\n  }\n  handleRemoveProject(id) {\n    let projects = this.state.projects;\n    projects = projects.filter((project) => Number(project.id) !== Number(id))\n    this.setState({ projects: projects })\n  }\n\n  handleNavProject(id) {\n    let projects = this.state.projects;\n    const project = projects.find((project) => Number(project.id) === Number(id));\n    this.setState({ shownProject: project });\n  }\n\n  handleAddTask(name) {\n    const shownProject = this.state.shownProject;\n    const tasks = this.state.shownProject.tasks || [];\n    const counter = this.state.idCounterTask + 1;\n    tasks.push({ name: name, id: this.state.idCounterTask });\n    shownProject['tasks'] = tasks;\n    shownProject['idCounter'] = counter;\n    this.setState({ shownProject: shownProject, idCounterTask: counter });\n  }\n  handleRemoveTask(id) {\n    const shownProject = this.state.shownProject;\n    let tasks = this.state.shownProject.tasks;\n    tasks = tasks.filter((task) => Number(task.id) !== Number(id))\n    shownProject['tasks'] = tasks;\n    this.setState({ shownProject: shownProject });\n  }\n  handleCheckTask(id) {\n    const shownProject = this.state.shownProject;\n    let tasks = this.state.shownProject.tasks;\n    let task = tasks.find((task) => Number(task.id) === Number(id))\n    task.done = !task.done\n    shownProject['tasks'] = tasks;\n    this.setState({ shownProject: shownProject });\n  }\n  handleBack() {\n    this.setState({ shownProject: null })\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <h1>To-do-App</h1>\n        {(this.state.shownProject) ?\n        <Tasks\n          projectName={this.state.shownProject.name}\n          tasks={this.state.shownProject.tasks}\n          handleAdd={this.handleAddTask}\n          handleRemove={this.handleRemoveTask}\n          handleCheck={this.handleCheckTask}\n          handleBack={this.handleBack}/> :\n        <Projects \n          projects = {this.state.projects}\n          handleAdd={this.handleAddProject}\n          handleRemove={this.handleRemoveProject}\n          handleNav={this.handleNavProject}\n        />\n        }\n      </Fragment>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// db.collection('cafes').get().then(snapshot => {\n//   snapshot.docs.forEach(doc => {\n//       renderCafe(doc);\n//   });\n// });"],"sourceRoot":""}