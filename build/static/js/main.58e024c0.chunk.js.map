{"version":3,"sources":["tasks.js","projects.js","firebase.js","index.js"],"names":["TaskElement","props","task","handleRemove","bind","handleCheck","event","this","target","parentElement","getAttribute","className","data-key","id","done","type","onChange","defaultChecked","name","onClick","React","Component","TaskForm","state","value","handleChange","handleButton","setState","preventDefault","addElement","onSubmit","placeholder","Tasks","handleAdd","handleBack","projectName","tasks","map","key","ProjectElement","project","handleNavigation","handleNav","element","classList","contains","ProjectForm","Projects","projects","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","dataHandler","projectsCollection","firestore","collection","getProjects","Promise","resolve","get","then","snapshot","docs","forEach","doc","data","s","d","push","saveProjects","add","newDoc","saveTasks","deleteTask","taskId","delete","deleteProject","updateTask","complete","update","App","shownProject","handleRemoveProject","handleNavProject","handleAddProject","handleAddTask","handleRemoveTask","handleCheckTask","result","filter","String","find","idCounterTask","getElementByIddeleteTask","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58e024c0.chunk.js","sourcesContent":["import React from 'react';\n\nclass TaskElement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.task = props.task;\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n  }\n  handleRemove(event) {\n    this.props.handleRemove(event.target.parentElement.getAttribute('data-key'));\n  }\n  handleCheck(event) {\n    this.props.handleCheck(event.target.parentElement.getAttribute('data-key'));\n  }\n\n  render() {\n    const task = this.task;\n    return (\n      <li className={this.props.className} data-key={task.id}>\n        {\n          task.done ?\n            <input type=\"checkbox\" onChange={this.handleCheck} defaultChecked /> :\n            <input type=\"checkbox\" onChange={this.handleCheck} />\n        }\n        <p>{task.name}</p>\n        <button onClick={this.handleRemove}> delete</button>\n      </li>\n    )\n  }\n}\nclass TaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'Nome da nova tarefa...',\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n  handleChange(event) {\n    this.setState({ value: event.target.value })\n  }\n  handleButton(event) {\n    event.preventDefault();\n    this.props.addElement(this.state.value);\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleButton}>\n        <input\n          placeholder={this.state.value}\n          onChange={this.handleChange}>\n        </input>\n        <button> add </button>\n      </form>\n    )\n  }\n}\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleBack  = this.handleBack.bind(this);\n  }\n  handleAdd(name) {\n    this.props.handleAdd(name);\n  }\n  handleRemove(id) {\n    this.props.handleRemove(id);\n  }\n  handleCheck(id) {\n    this.props.handleCheck(id)\n  }\n  handleBack(){\n    this.props.handleBack();\n  }\n  render() {\n    return (\n      <div className={'tasks'}>\n        <header>\n          <h2>{this.props.projectName}</h2>\n          <h2>Tasks</h2>\n          <button onClick={this.handleBack}></button>\n        </header>\n        <TaskForm addElement={this.handleAdd} />\n        <ul>\n          {\n            this.props.tasks ?\n              this.props.tasks.map((task) =>\n                <TaskElement\n                  task={task}\n                  className={\"task-item\"}\n                  handleRemove={this.handleRemove}\n                  handleCheck={this.handleCheck}\n                  key={task.id}\n                />\n              ) :\n              <h2>No tasks to show.</h2>\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport { Tasks };","import React from 'react';\n\nclass ProjectElement extends React.Component {\n  constructor(props) {\n    super(props)\n    this.project = this.props.project;\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleNavigation = this.handleNav.bind(this);\n  }\n  handleRemove(event) {\n    this.props.handleRemove(event.target.parentElement.getAttribute('data-key'));\n  }\n  handleNav(event) {\n    const element = event.target;\n    if(element.classList.contains('delete-btn')){\n      return;\n    }\n    if(element.getAttribute('data-key'))\n      this.props.handleNav(element.getAttribute('data-key'));\n    else if(element.parentElement.getAttribute('data-key'))\n      this.props.handleNav(element.parentElement.getAttribute('data-key'));\n  }\n  \n  render() {\n    return (\n      <li data-key={this.project.id}\n        className={'project-item'}\n        onClick={this.handleNavigation}>\n        <p>{this.project.name}</p>\n        <button \n          className={'delete-btn'} \n          onClick={this.handleRemove}>\n          delete\n        </button>\n      </li>\n    )\n  }\n}\n\nclass ProjectForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'Nome do novo projeto...',\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n  handleChange(event) {\n    this.setState({ value: event.target.value })\n  }\n  handleButton(event) {\n    event.preventDefault();\n    this.props.handleAdd(this.state.value);\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleButton}>\n        <input\n          placeholder={this.state.value}\n          onChange={this.handleChange}>\n        </input>\n        <button> add </button>\n      </form>\n    )\n  }\n}\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleNav = this.handleNav.bind(this);\n  }\n  handleAdd(name) {\n    this.props.handleAdd(name);\n  }\n  handleRemove(id) {\n    this.props.handleRemove(id);\n  }\n  handleNav(id) {\n    this.props.handleNav(id);\n  }\n  render() {\n    return (\n      <div className={\"projects\"}>\n        <h2>Projects</h2>\n        <ProjectForm handleAdd={this.handleAdd} />\n        <ol>\n          {\n            this.props.projects.map((project) =>\n              <ProjectElement\n                className={\"project-item\"}\n                project={project}\n                handleRemove={this.handleRemove}\n                handleNav={this.handleNav}\n                key={project.id}\n              />\n            )\n          }\n        </ol>\n      </div>\n    )\n  }\n}\n\nexport {Projects};","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCqA-Q7-ugQSpx03MbAWyul7gMu2JnHTbI\",\n  authDomain: \"to-do-react-10320.firebaseapp.com\",\n  databaseURL: \"https://to-do-react-10320.firebaseio.com\",\n  projectId: \"to-do-react-10320\",\n  storageBucket: \"to-do-react-10320.appspot.com\",\n  messagingSenderId: \"877841554206\",\n  appId: \"1:877841554206:web:29d753367ea5633ad3c70f\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst dataHandler = (() => {\n  const db = firebase.firestore();\n  const projectsCollection = db.collection('projects');\n\n  function getProjects() {\n    return new Promise(function (resolve) {\n      const projects = [];\n      projectsCollection.get().then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          const projectId = doc.id;\n          const tasks = [];\n          const project = {\n            id: projectId,\n            name: doc.data().name,\n          }\n          projectsCollection.doc(projectId).collection('tasks').get().then((s) => {\n            s.docs.forEach(d => {\n              tasks.push({\n                id: d.id,\n                name: d.data().name,\n                done: d.data().done\n              })\n            })\n          })\n          project.tasks = tasks;\n          projects.push(project);\n        })\n        resolve(projects);\n      });\n    })\n  }\n  function saveProjects(project) {\n    return (new Promise(function (resolve) {\n      projectsCollection.add({\n        name: project.name,\n      }).then(function (newDoc) {\n        resolve(newDoc.id)\n      })\n    }))\n  }\n\n  function saveTasks(project, task) {\n    return new Promise(function (resolve) {\n      projectsCollection.doc(project.id).collection('tasks').add(\n        { name: task.name }\n      ).then(function (task) {\n        resolve(task.id)\n      })\n    })\n  }\n  function deleteTask(projectId, taskId) {\n    projectsCollection\n      .doc(projectId).collection('tasks').doc(taskId).delete();\n  }\n  function deleteProject(projectId) {\n    projectsCollection.doc(projectId).delete();\n  }\n\n  function updateTask(projectId, taskId, complete) {\n    projectsCollection.doc(projectId).collection('tasks').doc(taskId).update(\n      { done: complete }\n    )\n  }\n  return {\n    getProjects,\n    saveProjects,\n    saveTasks,\n    deleteTask,\n    deleteProject,\n    updateTask,\n  }\n})();\n\nexport { dataHandler };\n\n\n\n\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Tasks } from \"./tasks\";\nimport { Projects } from \"./projects\"\nimport {dataHandler} from \"./firebase\"\nimport \"./reset.css\";\nimport \"./style.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [],\n      shownProject: null,\n    }\n\n    this.handleRemoveProject = this.handleRemoveProject.bind(this);\n    this.handleNavProject = this.handleNavProject.bind(this);\n    this.handleAddProject = this.handleAddProject.bind(this);\n\n    this.handleAddTask = this.handleAddTask.bind(this);\n    this.handleRemoveTask = this.handleRemoveTask.bind(this);\n    this.handleCheckTask = this.handleCheckTask.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n  }\n  handleAddProject(name) {\n    dataHandler.saveProjects({ name: name }).then((result) => {\n      const projects = this.state.projects;\n      projects.push({ name: name, id: result });\n      this.setState({ projects: projects });\n    })\n  }\n  handleRemoveProject(id) {\n    let projects = this.state.projects;\n    projects = projects.filter((project) => String(project.id) !== String(id))\n    this.setState({ projects: projects })\n    dataHandler.deleteProject(id);\n  }\n\n  handleNavProject(id) {\n    let projects = this.state.projects;\n    const project = projects.find((project) => String(project.id) === String(id));\n    this.setState({ shownProject: project });\n  }\n\n  handleAddTask(name) {\n    const shownProject = this.state.shownProject;\n    const tasks = this.state.shownProject.tasks || [];\n    dataHandler.saveTasks(shownProject, { name: name }).then((result)=>{\n      tasks.push({ name: name, id: result, done: false});\n      shownProject.tasks = tasks;\n      shownProject.id = result;\n      this.setState({\n        shownProject: shownProject,\n        idCounterTask: result\n      });\n    })\n  }\n  handleRemoveTask(id) {\n    const shownProject = this.state.shownProject;\n    let tasks = this.state.shownProject.tasks;\n    tasks = tasks.filter((task) => String(task.id) !== String(id))\n    shownProject.tasks = tasks;\n    this.setState({ shownProject: shownProject });\n    dataHandler.getElementByIddeleteTask(shownProject.id, id);\n  }\n  handleCheckTask(id) {\n    const shownProject = this.state.shownProject;\n    let tasks = this.state.shownProject.tasks;\n    let task = tasks.find((task) => String(task.id) === String(id))\n    task.done = !task.done\n    shownProject.tasks = tasks;\n    this.setState({ shownProject: shownProject });\n    dataHandler.updateTask(shownProject.id, id, task.done);\n  }\n  handleBack() {\n    this.setState({ shownProject: null })\n  }\n\n  componentDidMount() {\n    dataHandler.getProjects().then((result) => {\n      this.setState({ projects: result })\n    })\n  }\n  render() {\n    return (\n      <Fragment>\n        <h1>To-do-App</h1>\n        {(this.state.shownProject) ?\n          <Tasks\n            projectName={this.state.shownProject.name}\n            tasks={this.state.shownProject.tasks}\n            handleAdd={this.handleAddTask}\n            handleRemove={this.handleRemoveTask}\n            handleCheck={this.handleCheckTask}\n            handleBack={this.handleBack} /> :\n          <Projects\n            projects={this.state.projects}\n            handleAdd={this.handleAddProject}\n            handleRemove={this.handleRemoveProject}\n            handleNav={this.handleNavProject}\n          />\n        }\n      </Fragment>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}