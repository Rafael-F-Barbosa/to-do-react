{"version":3,"sources":["task.js","index.js"],"names":["TaskElement","props","task","handleRemove","bind","handleCheck","event","this","target","parentElement","getAttribute","data-key","id","done","type","onChange","defaultChecked","name","onClick","React","Component","TaskForm","state","value","handleChange","handleButton","setState","preventDefault","addElement","onSubmit","placeholder","Task","handleAdd","handleBack","className","projectName","tasks","map","key","ProjectElement","project","handleNavigation","ProjectForm","tasks2","App","idCounter","idCounterTask","projects","shownProject","handleAddTask","handleRemoveTask","handleCheckTask","counter","push","namProjectse","filter","Number","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f789e037.chunk.js","sourcesContent":["import React from 'react';\nimport \"./reset.css\";\nimport \"./index.css\";\n\nclass TaskElement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.task = props.task;\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n  }\n  handleRemove(event) {\n    this.props.handleRemove(event.target.parentElement.getAttribute('data-key'));\n  }\n  handleCheck(event) {\n    this.props.handleCheck(event.target.parentElement.getAttribute('data-key'));\n  }\n\n  render() {\n    const task = this.task;\n    return (\n      <li data-key={task.id}>\n        {\n          task.done ?\n            <input type=\"checkbox\" onChange={this.handleCheck} defaultChecked /> :\n            <input type=\"checkbox\" onChange={this.handleCheck} />\n        }\n        <p>{task.name}</p>\n        <button onClick={this.handleRemove}> delete</button>\n      </li>\n    )\n  }\n}\nclass TaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'Nome da nova tarefa...',\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n  handleChange(event) {\n    this.setState({ value: event.target.value })\n  }\n  handleButton(event) {\n    event.preventDefault();\n    this.props.addElement(this.state.value);\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleButton}>\n        <input\n          placeholder={this.state.value}\n          onChange={this.handleChange}>\n        </input>\n        <button> add </button>\n      </form>\n    )\n  }\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleBack  = this.handleBack.bind(this);\n  }\n  handleAdd(name) {\n    this.props.handleAdd(name);\n  }\n  handleRemove(id) {\n    this.props.handleRemove(id);\n  }\n  handleCheck(id) {\n    this.props.handleCheck(id)\n  }\n  handleBack(){\n    this.props.handleBack();\n  }\n  render() {\n    return (\n      <div className={this.props.className}>\n        <header>\n          <h2>{this.props.projectName}</h2>\n          <h2>Tasks</h2>\n          <button onClick={this.handleBack}></button>\n        </header>\n        <TaskForm addElement={this.handleAdd} />\n        <ul>\n          {\n            this.props.tasks ?\n              this.props.tasks.map((task) =>\n                <TaskElement\n                  task={task}\n                  handleRemove={this.handleRemove}\n                  handleCheck={this.handleCheck}\n                  key={task.id}\n                />\n              ) :\n              <h2>No tasks to show.</h2>\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport { Task }","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Task } from \"./task\";\n\nimport \"./reset.css\";\nimport \"./index.css\";\n\nclass ProjectElement extends React.Component {\n  constructor(props) {\n    super(props)\n    this.project = this.props.project;\n\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleNavigation = this.handleNavigation.bind(this);\n\n  }\n\n  handleRemove(event) {\n    this.props.handleRemove(event.target.parentElement.getAttribute('data-key'));\n  }\n  handleNavigation(event) {\n    this.props.handleNavigation(event.target.parentElement.getAttribute('data-key'));\n  }\n\n  render() {\n    return (\n      <li data-key={this.project.id}\n        className={'project-item'}\n        onClick={this.handleNavigation}>\n        <p>{this.project.name}</p>\n        <button onClick={this.handleRemove}> delete</button>\n      </li>\n    )\n  }\n}\nclass ProjectForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'Nome do novo projeto...',\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n  }\n  handleChange(event) {\n    this.setState({ value: event.target.value })\n  }\n  handleButton(event) {\n    event.preventDefault();\n    this.props.handleAdd(this.state.value);\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleButton}>\n        <input\n          placeholder={this.state.value}\n          onChange={this.handleChange}>\n        </input>\n        <button> add </button>\n      </form>\n    )\n  }\n}\n\nconst tasks = [\n  { name: \"Tarefa 1\", id: 0, done: false },\n  { name: \"Tarefa 2\", id: 1, done: true },\n  { name: \"Tarefa 3\", id: 2, done: false }\n];\nconst tasks2 = [\n  { name: \"Tarefa 4\", id: 3, done: false },\n  { name: \"Tarefa 5\", id: 4, done: false },\n  { name: \"Tarefa 6\", id: 5, done: true }\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      idCounter: 2,\n      idCounterTask: 6,\n      projects: [\n        { name: 'pojeto1', id: 0, tasks: tasks },\n        { name: 'pojeto2', id: 1, tasks: tasks2 }\n      ],\n      shownProject: null,\n    }\n\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleNavigation = this.handleNavigation.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n\n    this.handleAddTask = this.handleAddTask.bind(this);\n    this.handleRemoveTask = this.handleRemoveTask.bind(this);\n    this.handleCheckTask = this.handleCheckTask.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n  }\n  handleAdd(name) {\n    const projects = this.state.projects;\n    const counter = this.state.idCounter + 1;\n    projects.push({ namProjectse: name, id: this.state.idCounter });\n    this.setState({ projects: projects, idCounter: counter });\n  }\n  handleRemove(id) {\n    let projects = this.state.projects;\n    projects = projects.filter((project) => Number(project.id) !== Number(id))\n    this.setState({ projects: projects })\n  }\n\n  handleNavigation(id) {\n    let projects = this.state.projects;\n    const project = projects.find((project) => Number(project.id) === Number(id))\n    this.setState({ shownProject: project })\n  }\n\n  handleAddTask(name) {\n    const shownProject = this.state.shownProject;\n    const tasks = this.state.shownProject.tasks || [];\n    const counter = this.state.idCounterTask + 1;\n    tasks.push({ name: name, id: this.state.idCounterTask });\n    shownProject['tasks'] = tasks;\n    shownProject['idCounter'] = counter;\n    this.setState({ shownProject: shownProject, idCounterTask: counter });\n  }\n  handleRemoveTask(id) {\n    const shownProject = this.state.shownProject;\n    let tasks = this.state.shownProject.tasks;\n    tasks = tasks.filter((task) => Number(task.id) !== Number(id))\n    shownProject['tasks'] = tasks;\n    this.setState({ shownProject: shownProject });\n  }\n  handleCheckTask(id) {\n    const shownProject = this.state.shownProject;\n    let tasks = this.state.shownProject.tasks;\n    let task = tasks.find((task) => Number(task.id) === Number(id))\n    task.done = !task.done\n    shownProject['tasks'] = tasks;\n    this.setState({ shownProject: shownProject });\n  }\n  handleBack() {\n    this.setState({ shownProject: null })\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <h1>To-do-App</h1>\n        {(this.state.shownProject) ?\n        <Task\n          projectName={this.state.shownProject.name}\n          tasks={this.state.shownProject.tasks}\n          className={'tasks'}\n          handleAdd={this.handleAddTask}\n          handleRemove={this.handleRemoveTask}\n          handleCheck={this.handleCheckTask}\n          handleBack={this.handleBack}/> :\n        <div className={\"projects\"}>\n          <h2>Projects</h2>\n          <ProjectForm handleAdd={this.handleAdd} />\n          <ol>\n            {\n              this.state.projects.map((project) =>\n                <ProjectElement\n                  className={\"project-item\"}\n                  project={project}\n                  handleRemove={this.handleRemove}\n                  handleNavigation={this.handleNavigation}\n                  key={project.id}\n                />\n              )\n            }\n          </ol>\n        </div>\n        }\n      </Fragment>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}