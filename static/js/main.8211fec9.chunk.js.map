{"version":3,"sources":["Tasks/TaskElement/TaskElement.module.css","UI/Button/Button.module.css","Tasks/TaskDetails/TaskDetails.module.css","Tasks/TaskHeader/TaskHeader.module.css","Tasks/TaskList/TaskList.module.css","Tasks/TaskController/TaskController.module.css","Projects/ProjectForm/ProjectForm.module.css","Projects/Projects/Projects.module.css","Projects/ProjectElement/ProjectElement.module.css","App/Error.module.css","UI/Button/Button.js","Tasks/TaskDetails/TaskDetails.js","Tasks/TaskHeader/TaskHeader.js","Tasks/TaskElement/TaskElement.js","Tasks/TaskList/TasksList.js","Tasks/TaskController/TaskController.js","hoc/Aux.js","UI/MainHeader/MainHeader.js","Projects/ProjectForm/ProjectForm.js","Projects/ProjectElement/ProjectElement.js","Projects/ProjectList/ProjectList.js","Projects/Projects/Projects.js","firebase.js","App/App.js","index.js"],"names":["module","exports","button","props","classesNames","classes","Button","type","join","id","onClick","clicked","className","children","makeNumberTwoDigits","number","formatedNumber","TaskDetails","handleChangeName","event","setState","name","target","value","handleChangeDate","date","handleChangePriority","priority","handleSubmit","preventDefault","state","whichTask","handleUpdate","handleCancel","alert","d","Date","getDate","month","getMonth","year","getFullYear","this","onSubmit","onChange","placeholder","React","Component","taskHeader","Header","projectName","handleNewTask","handleBack","TaskElement","task","apliedClasses","done","Done","data-key","Title","Status","handleCheck","handleDetails","handleRemove","taskList","tasks","tasksOrderedByName","sort","a","b","TaskItems","map","key","TaskController","handleAdd","showList","taskListOrDetails","TasksList","Tasks","TaskHeader","aux","mainHeader","ProjectForm","handleChange","handleButton","ProjectElement","parentElement","getAttribute","handleNav","element","project","projectId","projectList","projects","Projects","ProjectList","firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","dataHandler","projectsCollection","firestore","collection","getProjects","Promise","resolve","reject","verifyConection","get","then","snapshot","docs","forEach","doc","data","s","push","saveProjects","add","newDoc","saveTasks","result","taskId","deleteTask","delete","deleteProject","updateTask","update","App","handleAddProject","handleRemoveProject","filter","String","handleNavProject","find","shownProject","handleAddTask","handleUpdateTask","index","findIndex","t","updatedTask","splice","handleRemoveTask","handleCheckTask","firebaseError","catch","err","appController","Aux","MainHeader","Error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8211fec9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskElement\":\"TaskElement_TaskElement__13UVG\",\"Title\":\"TaskElement_Title__1y87S\",\"Status\":\"TaskElement_Status__3cX6x\",\"Checkbox\":\"TaskElement_Checkbox__208J8\",\"Done\":\"TaskElement_Done__2tKuA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3h9Fb\",\"Danger\":\"Button_Danger__1lxLJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskDetails\":\"TaskDetails_TaskDetails__3kWAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"TaskHeader_Header__39s6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskItems\":\"TaskList_TaskItems__1PHkn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tasks\":\"TaskController_Tasks__WsmfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProjectForm\":\"ProjectForm_ProjectForm__2Vzki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Projects\":\"Projects_Projects__2M78j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProjectElement\":\"ProjectElement_ProjectElement__3ufHR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"Error_Error__1wjn7\"};","import React from 'react'\nimport classes from './Button.module.css'\n\nconst button = (props) => {\n    let classesNames = classes.Button\n    let type = 'submit';\n    if (props.type) {\n        classesNames = [classes.Button, classes[props.type]].join(' ')\n        type = 'button';\n    }\n    return (\n    <button\n        type={type}\n        id={'button'}\n        onClick={props.clicked}\n        className={classesNames}>\n        {props.children}\n    </button>)\n}\nexport default button;","import React from 'react'\nimport classes from './TaskDetails.module.css'\n\nimport Button from '../../UI/Button/Button'\n\nconst makeNumberTwoDigits = (number) => {\n  let formatedNumber = null;\n  if (number < 10 && number > -1) {\n    formatedNumber = \"0\" + number;\n  }\n  return formatedNumber || number;\n}\n\nclass TaskDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    const d = new Date();\n    const date = makeNumberTwoDigits(d.getDate());\n    const month = makeNumberTwoDigits(d.getMonth() + 1);\n    const year = d.getFullYear();\n\n    this.state = {\n      name: '',\n      date: `${year}-${month}-${date}`,\n      priority: 'low',\n    }\n  }\n  handleChangeName = (event) => {\n    this.setState({ name: event.target.value })\n  }\n  handleChangeDate = (event) => {\n    this.setState({ date: event.target.value })\n  }\n  handleChangePriority = (event) => {\n    this.setState({ priority: event.target.value })\n  }\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.name === '') {\n      alert('Write a name!')\n      return;\n    }\n\n    const addOrUpdateTask = this.props.whichTask;\n    if (addOrUpdateTask) {\n      this.props.handleUpdate(this.state, this.props.id);\n    } else {\n      this.props.handleUpdate(this.state);\n    }\n    this.props.handleCancel();\n\n  }\n  handleCancel = (event) => {\n    event.preventDefault();\n    this.props.handleCancel();\n  }\n  componentDidMount() {\n    const whichTask = this.props.whichTask;\n    if (whichTask) {\n      this.setState({\n        name: whichTask.name,\n        date: whichTask.date,\n        priority: whichTask.priority\n      })\n    }\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={classes.TaskDetails}>\n        <label>Name</label>\n        {!this.props.whichTask ?\n          <input\n            placeholder={this.state.name}\n            onChange={this.handleChangeName}>\n          </input> :\n          <input\n            value={this.state.name}\n            onChange={this.handleChangeName}>\n          </input>\n        }\n\n        <label>Due date</label>\n        <input\n          type=\"date\"\n          onChange={this.handleChangeDate}\n          value={this.state.date}>\n        </input>\n\n        <label>Priority </label>\n        <select value={this.state.priority}\n          onChange={this.handleChangePriority}>\n          <option value=\"low\">low</option>\n          <option value=\"medium\">medium</option>\n          <option value=\"high\">high</option>\n        </select>\n\n        <div>\n          <Button\n            type={\"Danger\"}\n            clicked={this.handleCancel}>cancel</Button>\n          <Button clicked={this.handleSubmit}\n          >{!this.props.whichTask ? 'add' : 'update'}\n          </Button>\n        </div>\n\n      </form>\n    )\n  }\n}\n\nexport default TaskDetails;","import React from 'react'\n\nimport classes from './TaskHeader.module.css'\n\nconst taskHeader = (props) => (\n    <header className={classes.Header}>\n        <h2>{props.projectName}</h2>\n        <h2>Tasks</h2>\n        <button onClick={props.handleNewTask}></button>\n        <button onClick={props.handleBack}></button>\n    </header>\n)\n\nexport default taskHeader","import React from 'react';\nimport Button from '../../UI/Button/Button'\nimport classes from './TaskElement.module.css'\n\nclass TaskElement extends React.Component {\n  render() {\n    const task = this.props.task;\n\n    let apliedClasses = classes.TaskElement;\n    if (task.done) {\n      apliedClasses = [classes.TaskElement, classes.Done].join(' ');\n    }\n    return (\n      <li className={apliedClasses} data-key={task.id}>\n        \n        <div className={classes.Title}>\n          <p>{task.name}</p>\n        </div>\n\n        <div className={classes.Status}>\n          <label>Status: </label>\n          {\n            task.done ?\n              <p onClick={() => this.props.handleCheck(task.id)}>DONE</p> :\n              <p onClick={() => this.props.handleCheck(task.id)}>TO DO</p>\n          }\n        </div>\n        \n        <div>\n          <label>Date: </label>\n          <p>{task.date?task.date:null}</p>\n        </div>\n\n        <div>\n          <label>Priority: </label>\n          <p>{task.priority}</p>\n        </div>\n\n        <div>\n          <Button clicked={()=>this.props.handleDetails(task, task.id)} type={null}>edit</Button>\n          <Button clicked={()=>this.props.handleRemove(task.id)} type='Danger'>delete</Button>\n        </div>\n      </li>\n    )\n  }\n}\nexport default TaskElement","\nimport React from 'react'\n\nimport TaskElement from '../TaskElement/TaskElement'\nimport classes from './TaskList.module.css'\nconst taskList = (props) => {\n    let tasks = props.tasks;\n    if (tasks) {\n        const tasksOrderedByName =\n            tasks.sort((a, b) => a.name < b.name ? 1 : -1)\n        const tasksOrderedByDone =\n            tasksOrderedByName.sort((a) => a.done ? 1 : -1)\n        tasks = tasksOrderedByDone;\n    }\n    return (\n        <ul className={classes.TaskItems}>\n            {\n                (tasks) ?\n                    tasks.map((task) =>\n                        <TaskElement\n                            key={task.id}\n                            task={task}\n                            handleRemove={props.handleRemove}\n                            handleCheck={props.handleCheck}\n                            handleDetails={props.handleDetails}\n                        />\n                    ) :\n                    <h2>No tasks to show.</h2>\n            }\n        </ul>\n    )\n}\n\nexport default taskList","import React from 'react';\n\nimport TaskDetails from '../TaskDetails/TaskDetails'\nimport TaskHeader from '../TaskHeader/TaskHeader'\nimport TasksList from '../TaskList/TasksList'\nimport classes from './TaskController.module.css';\n\nclass TaskController extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showList: true,\n      task: null,\n    }\n  }\n  handleAdd = (task) => {\n    this.props.handleAdd(task);\n  }\n  handleUpdate = (task, id) => {\n    this.props.handleUpdate(task, id);\n  }\n  handleRemove = (id) => {\n    this.props.handleRemove(id);\n  }\n  handleCheck = (id) => {\n    this.props.handleCheck(id)\n  }\n  handleBack = () => {\n    this.props.handleBack();\n  }\n  handleDetails = (task = null, id) => {\n    if (task) {\n      task.id = id\n    }\n    this.setState({ showList: !this.state.showList, task: task })\n  }\n  handleNewTask = () => {\n    this.setState({ showList: !this.state.showList, task: null })\n  }\n  render() {\n\n    let taskListOrDetails = null;\n\n    if (this.state.showList) {\n      taskListOrDetails =\n        <TasksList\n          tasks={this.props.tasks}\n          handleRemove={this.handleRemove}\n          handleDetails={this.handleDetails}\n          handleCheck={this.handleCheck}\n        />\n    } else {\n      taskListOrDetails =\n        <TaskDetails\n          whichTask={this.state.task}\n          id={this.state.task?this.state.task.id:null}\n          handleUpdate={this.state.task?this.handleUpdate:this.handleAdd}\n          handleDetails={this.handleDetails}\n          handleCancel={this.handleDetails}\n        />\n    }\n\n\n    return (\n      <div className={classes.Tasks}>\n        <TaskHeader\n          projectName={this.props.projectName}\n          handleNewTask={this.handleNewTask}\n          handleBack={this.handleBack}\n        />\n        {taskListOrDetails}\n      </div>\n    )\n  }\n}\nexport default TaskController;","const aux = (props) => (props.children);\n\nexport default aux","import React from 'react';\n\nconst mainHeader = () => <h1>To do App</h1>;\n\nexport default mainHeader","import React from 'react'\nimport classes from './ProjectForm.module.css'\n\nimport Button from '../../UI/Button/Button'\nclass ProjectForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'Nome do novo projeto...',\n    }\n  }\n  handleChange = (event) => {\n    this.setState({ value: event.target.value })\n  }\n  handleButton = (event) => {\n    event.preventDefault();\n    this.props.handleAdd(this.state.value);\n  }\n  render() {\n    return (\n      <form className={classes.ProjectForm} onSubmit={this.handleButton}>\n        <input\n          placeholder={this.state.value}\n          onChange={this.handleChange}>\n        </input>\n        <div>\n          <Button>add</Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default ProjectForm;","import React from 'react'\nimport classes from './ProjectElement.module.css'\nimport Button from '../../UI/Button/Button'\n\nclass ProjectElement extends React.Component {\n    handleRemove = (event) => {\n        this.props.handleRemove(event.target.parentElement.getAttribute('data-key'));\n    }\n    handleNav = (event) => {\n        const element = event.target;\n        if (element.id === 'button') {\n            return;\n        }\n        if (element.getAttribute('data-key'))\n            this.props.handleNav(this.props.project.id);\n        else if (element.parentElement.getAttribute('data-key'))\n            this.props.handleNav(this.props.project.id);\n    }\n    render() {\n        const projectId = this.props.project.id;\n        return (\n            <li data-key={projectId}\n                className={classes.ProjectElement}\n                onClick={this.handleNav}>\n                <p>{this.props.project.name}</p>\n                <div>\n                    <Button\n                        type={'Danger'}\n                        clicked={()=>this.props.handleRemove(projectId)}\n                    >delete</Button>\n                </div>\n            </li>\n        )\n    }\n}\n\n\nexport default ProjectElement;","import React from 'react'\nimport ProjectElement from '../ProjectElement/ProjectElement'\n\n\nconst projectList = (props) => {\n    return (\n        <ol>\n            {\n                props.projects.map((project) =>\n                    <ProjectElement\n                        project={project}\n                        handleRemove={props.handleRemove}\n                        handleNav={props.handleNav}\n                        key={project.id}\n                    />\n                )\n            }\n        </ol>\n    )\n}\n\nexport default projectList","import React from 'react';\n\nimport ProjectForm from '../ProjectForm/ProjectForm'\nimport classes from './Projects.module.css'\nimport ProjectList from '../ProjectList/ProjectList'\n\nclass Projects extends React.Component {\n  handleAdd = (name) => {\n    this.props.handleAdd(name);\n  }\n  handleRemove = (id) =>{\n    this.props.handleRemove(id);\n  }\n  handleNav = (id) => {\n    this.props.handleNav(id);\n  }\n  render() {\n    return (\n      <div className={classes.Projects}>\n        <h2>Projects</h2>\n        <ProjectForm handleAdd={this.handleAdd} />\n        <ProjectList \n        projects={this.props.projects}\n        handleRemove={this.handleRemove}\n        handleNav={this.handleNav}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Projects;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCqA-Q7-ugQSpx03MbAWyul7gMu2JnHTbI\",\n  authDomain: \"to-do-react-10320.firebaseapp.com\",\n  databaseURL: \"https://to-do-react-10320.firebaseio.com\",\n  projectId: \"to-do-react-10320\",\n  storageBucket: \"to-do-react-10320.appspot.com\",\n  messagingSenderId: \"877841554206\",\n  appId: \"1:877841554206:web:29d753367ea5633ad3c70f\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst dataHandler = (() => {\n  const db = firebase.firestore();\n  const projectsCollection = db.collection('projects');\n\n  function getProjects() {\n    return new Promise(function (resolve, reject) {\n      const projects = [];\n      let verifyConection = false;\n      projectsCollection.get().then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          const projectId = doc.id;\n          const tasks = [];\n          const project = {\n            id: projectId,\n            name: doc.data().name,\n          }\n          projectsCollection.doc(projectId).collection('tasks').get().then((s) => {\n            s.docs.forEach(d => {\n              tasks.push({\n                id: d.id,\n                name: d.data().name,\n                date: d.data().date,\n                priority: d.data().priority,\n                done: d.data().done,\n              })\n            })\n          })\n          verifyConection = true;\n          project.tasks = tasks;\n          projects.push(project);\n        })\n        if(verifyConection){\n          resolve(projects);\n        }else{\n          reject('Ocorreu algum erro!')\n        }\n      })\n    })\n  }\n  function saveProjects(project) {\n    return (new Promise(function (resolve) {\n      projectsCollection.add({\n        name: project.name,\n        tasks: [],\n      }).then(function (newDoc) {\n        resolve(newDoc.id)\n      })\n    }))\n  }\n\n  function saveTasks(project, task) {\n    const projectId = project.id;\n    return new Promise(function (resolve) {\n      projectsCollection.doc(projectId).collection('tasks').add(\n        {\n          name: task.name,\n          date: task.date,\n          priority: task.priority,\n          done: task.done\n        }\n      ).then(function (result) {\n        resolve({ taskId: result.id, projectId: projectId })\n      })\n    })\n  }\n  function deleteTask(projectId, taskId) {\n    projectsCollection\n      .doc(projectId).collection('tasks').doc(taskId).delete();\n  }\n  function deleteProject(projectId) {\n    projectsCollection.doc(projectId).delete();\n  }\n\n  function updateTask(projectId, taskId, task) {\n    projectsCollection.doc(projectId).collection('tasks').doc(taskId).update(\n      {\n        name: task.name,\n        date: task.date,\n        priority: task.priority,\n        done: task.done\n      }\n    )\n  }\n  return {\n    getProjects,\n    saveProjects,\n    saveTasks,\n    deleteTask,\n    deleteProject,\n    updateTask,\n  }\n})();\n\nexport default dataHandler;\n\n\n\n\n","import React from 'react';\nimport TaskController from \"../Tasks/TaskController/TaskController\";\nimport Aux from '../hoc/Aux'\nimport MainHeader from '../UI/MainHeader/MainHeader'\nimport Projects from \"../Projects/Projects/Projects\";\nimport dataHandler from \"../firebase\";\nimport \"./reset.css\";\nimport \"./App.css\";\nimport classes from './Error.module.css'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            projects: [],\n            shownProject: null,\n            firebaseError: false,\n        };\n    }\n    handleAddProject = (name) => {\n        dataHandler.saveProjects({ name: name }).then((result) => {\n            const projects = this.state.projects;\n            projects.push({ name: name, id: result });\n            this.setState({ projects: projects });\n        })\n    }\n    handleRemoveProject = (id) => {\n        let projects = this.state.projects;\n        projects = projects.filter((project) => String(project.id) !== String(id));\n        this.setState({ projects: projects });\n        dataHandler.deleteProject(id);\n    }\n\n    handleNavProject = (id) => {\n        let projects = this.state.projects;\n        const project = projects.find((project) => String(project.id) === String(id));\n        this.setState({ shownProject: project });\n    }\n\n    handleAddTask = (task) => {\n        const shownProject = { ...this.state.shownProject };\n        const tasks = shownProject.tasks || [];\n\n        dataHandler\n            .saveTasks(shownProject, {\n                name: task.name,\n                date: task.date,\n                priority: task.priority,\n                done: false\n            })\n            .then((result) => {\n                tasks.push({\n                    name: task.name,\n                    date: task.date,\n                    priority: task.priority,\n                    id: result.taskId,\n                    done: false\n                });\n                shownProject.tasks = tasks;\n                shownProject.id = result.projectId;\n                this.setState({\n                    shownProject: shownProject,\n                });\n            })\n    }\n\n\n    handleUpdateTask = (task, taskId) => {\n        const shownProject = { ...this.state.shownProject };\n        let tasks = [...shownProject.tasks];\n\n        const index = tasks.findIndex((t) => String(t.id) === String(taskId));\n        let updatedTask = tasks[index];\n\n        updatedTask.name = task.name;\n        updatedTask.date = task.date;\n        updatedTask.priority = task.priority;\n\n        tasks.splice(index, 1, updatedTask);\n        shownProject.tasks = tasks;\n\n        this.setState({ shownProject: shownProject });\n\n        dataHandler.updateTask(shownProject.id, taskId, updatedTask);\n\n    }\n    handleRemoveTask = (id) => {\n        const shownProject = this.state.shownProject;\n        let tasks = this.state.shownProject.tasks;\n        tasks = tasks.filter((task) => String(task.id) !== String(id));\n        shownProject.tasks = tasks;\n        this.setState({ shownProject: shownProject });\n        dataHandler.deleteTask(shownProject.id, id);\n    }\n    handleCheckTask = (id) => {\n        const shownProject = this.state.shownProject;\n        let tasks = this.state.shownProject.tasks;\n        let task = tasks.find((task) => String(task.id) === String(id));\n        task.done = !task.done;\n        shownProject.tasks = tasks;\n        this.setState({ shownProject: shownProject });\n        dataHandler.updateTask(shownProject.id, id, task)\n    }\n    handleBack = () => {\n        this.setState({ shownProject: null });\n    }\n\n    componentDidMount() {\n        dataHandler.getProjects().then((result) => {\n            this.setState({ projects: result });\n            this.setState({ firebaseError: false });\n        }).catch((err) => {\n            this.setState({ firebaseError: true });\n        })\n    }\n    render() {\n        const appController = (this.state.shownProject) ?\n            <TaskController\n                projectName={this.state.shownProject.name}\n                tasks={this.state.shownProject.tasks}\n                handleAdd={this.handleAddTask}\n                handleUpdate={this.handleUpdateTask}\n                handleRemove={this.handleRemoveTask}\n                handleCheck={this.handleCheckTask}\n                handleBack={this.handleBack} /> :\n            <Projects\n                projects={this.state.projects}\n                handleAdd={this.handleAddProject}\n                handleRemove={this.handleRemoveProject}\n                handleNav={this.handleNavProject}\n            />\n        return (\n            <Aux>\n                <MainHeader />\n                {!this.state.firebaseError ?\n                    appController :\n                    <div className={classes.Error}>\n                        <p>\n                            Problem reaching firebase.\n                        </p>\n                        <p>Reload the page and verify your conection.</p>\n                    </div>\n\n                }\n\n            </Aux>\n        )\n    }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}